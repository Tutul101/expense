{"version":3,"sources":["components/Header.js","components/Transaction.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/TrasanactionList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Transaction","props","deleteTransaction","useContext","GlobalContext","sign","transaction","amount","class","text","Math","abs","onClick","id","state","action","type","transactions","filter","transac","payload","initalState","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","addTransaction","payloa","Balance","total","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","console","log","expense","TrasanactionList","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a22f196.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Header = () => {\r\n  return <h2>Expense Tracker</h2>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Transaction = (props) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = props.transaction.amount < 0 ? \"-\" : \"+\";\r\n  return (\r\n    <>\r\n      <li class={props.transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n        {props.transaction.text}\r\n        <span>\r\n          {sign}${Math.abs(props.transaction.amount)}\r\n        </span>\r\n        <button\r\n          class=\"delete-btn\"\r\n          onClick={() => {\r\n            deleteTransaction(props.transaction.id);\r\n          }}\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter((transac) => {\r\n          return transac.id !== action.payload;\r\n        }),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { Transaction } from \"../components/Transaction\";\r\nimport AppReducer from \"./AppReducer\";\r\n//Initial STate\r\nconst initalState = {\r\n  transactions: [\r\n    { id: 1, text: \"Flower\", amount: -20 },\r\n    { id: 2, text: \"Salary\", amount: 300 },\r\n    { id: 3, text: \"Book\", amount: -10 },\r\n    { id: 4, text: \"Camera\", amount: 150 },\r\n  ],\r\n};\r\n// Create Context\r\nexport const GlobalContext = createContext(initalState);\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initalState);\r\n\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  }\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payloa: transaction,\r\n    });\r\n  }\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n  console.log(income);\r\n\r\n  const expense = amounts\r\n    .filter((item) => item < 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n  return (\r\n    <>\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p class=\"money plus\">{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p class=\"money minus\">{expense}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Transaction } from \"./Transaction\";\r\nexport const TrasanactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  console.log(transactions);\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" class=\"list\">\r\n        {transactions.map((transac) => {\r\n          return (\r\n            <Transaction key={transac.id} transaction={transac}></Transaction>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TrasanactionList } from \"./components/TrasanactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header></Header>\n      <div className=\"container\">\n        <Balance></Balance>\n        <div className=\"inc-exp-container\">\n          <IncomeExpenses></IncomeExpenses>\n        </div>\n        <TrasanactionList></TrasanactionList>\n      </div>\n      {/* <AddTransaction></AddTransaction> */}\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}